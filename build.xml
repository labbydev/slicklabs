<project name="slicklabs" default="build">
    <!-- Run with: vendor/bin/phing -Dbuild.env=vagrant -->
    <!-- For a list of commands, try: vendor/bin/phing -Dbuild.env=vagrant -l -->


    <import file="vendor/palantirnet/the-build/tasks/boilerplate.xml" />


    <!-- Make these commands available by default. -->
    <import file="vendor/palantirnet/the-build/tasks/drupal.xml" />
    <import file="vendor/palantirnet/the-build/tasks/acquia.xml" />


    <!-- Default target: build -->
    <target name="build" description="Build the application.">
        <phingcall target="drupal-build" />
        <!--<phingcall target="link-libraries" />-->

        <property name="styleguide.dir" value="styleguide" />
        <resolvepath propertyName="styleguide.dir.absolute_path" file="${styleguide.dir}" />
        <resolvepath propertyname="styleguide_code" file="${styleguide.dir}/src/content/assets" />

        <exec command="npm run butler -- sass" dir="${styleguide.dir.absolute_path}" logoutput="true" checkreturn="true" />

        <resolvepath propertyname="custom_theme" file="${drupal.root}/themes/custom/slicklabs_theme" />
        <includeresource mode="${build.artifact_mode}" source="${styleguide_code}/css" dest="${custom_theme}/css" />
        <includeresource mode="${build.artifact_mode}" source="${styleguide_code}/js" dest="${custom_theme}/js" />
        <includeresource mode="${build.artifact_mode}" source="${styleguide_code}/imgs" dest="${custom_theme}/imgs" />
    </target>


    <!-- Target: install -->
    <target name="install" description="Install the application.">
        <phingcall target="drupal-install" />
    </target>


    <!-- Target: migrate -->
    <target name="migrate" description="Run the migrations.">
        <echo>Configure this target to load sample data and run the migrations.</echo>
    </target>

    <!-- Target: link-libraries -->
    <target name="link-libraries">
        <delete dir="${build.dir}/${drupal.root}/libraries/" />
        <mkdir dir="${build.dir}/${drupal.root}/libraries/" />

        <resolvepath propertyname="vendor_path" file="vendor" />
        <includeresource mode="${build.artifact_mode}" source="${vendor_path}/desandro/imagesloaded" dest="${drupal.root}/libraries/imagesloaded" />
        <includeresource mode="${build.artifact_mode}" source="${vendor_path}/desandro/masonry" dest="${drupal.root}/libraries/masonry" />
        <includeresource mode="${build.artifact_mode}" source="${vendor_path}/enyo/dropzone" dest="${drupal.root}/libraries/dropzone" />

    </target>


    <!-- Target: test -->
    <target name="test" description="Run all the tests.">
        <echo>Configure this target to run the tests.</echo>
        <!-- You may want to include one or more of the commands from the 'code-review' target here. -->
    </target>


    <!-- Target: code-review -->
    <target name="code-review" description="Run the automated code reviews.">
        <!-- These are called directly rather than using <import> because they are single-purpose task files. -->
        <phing phingfile="${build.dir}/vendor/palantirnet/the-build/tasks/code_review/drupal_code_sniffer.xml" />
        <phing phingfile="${build.dir}/vendor/palantirnet/the-build/tasks/code_review/phpmd.xml" />
        <phing phingfile="${build.dir}/vendor/palantirnet/the-build/tasks/code_review/phplint.xml" />
        <phing phingfile="${build.dir}/vendor/palantirnet/the-build/tasks/code_review/phptodo.xml" />
    </target>


    <!-- Target: deploy -->
    <target name="deploy" description="Build and deploy the application.">
        <echo>Configure this target to build the production artifact; see the `deploy-to-acquia` target for an example.</echo>
    </target>


    <!-- Target: deploy-to-acquia -->
    <target name="deploy-to-acquia">
        <phingcall target="check-deploy-env" />
        <phingcall target="acquia-build" />
        <phingcall target="build" />
        <phingcall target="acquia-deploy" />
    </target>


</project>
