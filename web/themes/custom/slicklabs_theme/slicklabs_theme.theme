<?php

/**
 * @file
 * Functions to support theming in the ucl_theme theme.
 */

use Drupal\image\Entity\ImageStyle;

/**
 * Implements hook_preprocess_HOOK() for html.html.twig.
 */
function ucl_theme_preprocess_html(array &$variables) {

}

/**
 * Implements hook_page_attachments_alter().
 */
function ucl_theme_page_attachments_alter(array &$page) {
  // Tell IE to use latest rendering engine (not to use compatibility mode).
  /*$ie_edge = [
    '#type' => 'html_tag',
    '#tag' => 'meta',
    '#attributes' => [
    'http-equiv' => 'X-UA-Compatible',
    'content' => 'IE=edge',
    ],
  ];
  $page['#attached']['html_head'][] = [$ie_edge, 'ie_edge'];*/
}

/**
 * Implements hook_preprocess_page() for page.html.twig.
 */
function ucl_theme_preprocess_page(array &$variables) {

  if ($variables['page']['#title']) {
    $variables['title'] = $variables['page']['#title'];
  }
}

/**
 * Implements hook_preprocess_node().
 */
function ucl_theme_preprocess_node(array &$variables) {
  // Default to turning off byline/submitted.
  //$variables['display_submitted'] = FALSE;

  $node = $variables['node'];
  $type = $node->getType();
  $view_mode = $variables['view_mode'];
  // Array of allowed view modes (for performance so as to not execute on unneeded nodes)
  $allowed_view_modes = ['full'];



  /**
   * Implements hook_theme_suggestions_page_alter().
   */
  function ucl_theme_theme_suggestions_page_alter(array &$suggestions, array $variables) {
    if ($node = \Drupal::routeMatch()->getParameter('node')) {
      $content_type = $node->bundle();
      $suggestions[] = 'page__node__' . $content_type;
    }
  }

  /**
   * Implements hook_theme_suggestions_node_alter().
   */
  function ucl_theme_theme_suggestions_node_alter(array &$suggestions, array $variables) {
    $view_mode = $variables['elements']['#view_mode'];
    $node = $variables['elements']['#node'];
    $suggestions[] = 'node__type_' . $node->getType() . '__view_mode_' .  $variables['elements']['#view_mode'];
    $suggestions[] = 'node__' . $variables['elements']['#view_mode'];
  }

  /**
   * Implements hook_preprocess_HOOK() for Block document templates.
   */
  function ucl_theme_preprocess_block(array &$variables) {

  }

  /**
   * Implements hook_theme_suggestions_field_alter().
   */
  function ucl_theme_theme_suggestions_field_alter(array &$suggestions, array $variables) {
    /*$element = $variables['element'];
    $suggestions[] = 'field__' . $element['#view_mode'];
    $suggestions[] = 'field__' . $element['#view_mode'] . '__' . $element['#field_name'];*/
  }

  /**
   * Implements hook_theme_suggestions_field_alter().
   */
  function ucl_theme_theme_suggestions_fieldset_alter(array &$suggestions, array $variables) {
    /*$element = $variables['element'];
    if (isset($element['#attributes']['class']) && in_array('form-composite', $element['#attributes']['class'])) {
      $suggestions[] = 'fieldset__form_composite';
    }*/
  }

  /**
   * Implements hook_theme_suggestions_views_view_alter().
   */
  function ucl_theme_theme_suggestions_views_view_alter(array &$suggestions, array $variables) {

  }

  /**
   * Implements hook_preprocess_form().
   */
  function ucl_theme_preprocess_form(array &$variables) {
    //$variables['attributes']['novalidate'] = 'novalidate';
  }

  /**
   * Implements hook_preprocess_select().
   */
  function ucl_theme_preprocess_select(array &$variables) {
    //$variables['attributes']['class'][] = 'select-chosen';
  }

  /**
   * Implements hook_preprocess_field().
   */
  function ucl_theme_preprocess_field(&$variables, $hook) {
    /* Set shortcut variables. Hooray for less typing! */
    // $name = $variables['element']['#field_name'];
    //$bundle = $variables['element']['#bundle'];

  }

  /**
   * Implements hook_preprocess_details().
   */
  function ucl_theme_preprocess_details(array &$variables) {
    /*$variables['attributes']['class'][] = 'details';
    $variables['summary_attributes']['class'] = 'summary';*/
  }

  /**
   * Implements hook_theme_suggestions_details_alter().
   */
  function ucl_theme_theme_suggestions_details_alter(array &$suggestions, array $variables) {

  }

  /**
   * Implements hook_preprocess_menu_local_task().
   */
  function ucl_theme_preprocess_menu_local_task(array &$variables) {
    //$variables['element']['#link']['url']->setOption('attributes', ['class'=>'rounded']);
  }

